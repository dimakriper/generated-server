openapi: 3.0.3
info:
  description: "API для управления бюджетом, категориями и транзакциями"
  title: Budget Management API
  version: 1.0.0
servers:
- description: Local development server
  url: http://localhost:8080/api
paths:
  /categories:
    get:
      operationId: getAllCategories
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Category'
                type: array
          description: Успешный ответ
      summary: Получить все категории
      x-accepts:
      - application/json
    post:
      operationId: createCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: Категория успешно создана
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Неверные данные запроса
      summary: Создать новую категорию
      x-content-type: application/json
      x-accepts:
      - application/json
  /categories/{id}:
    delete:
      operationId: deleteCategory
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Категория успешно удалена
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Категория не найдена
      summary: Удалить категорию
      x-accepts:
      - application/json
    get:
      operationId: getCategoryById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: Успешный ответ
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Категория не найдена
      summary: Получить категорию по ID
      x-accepts:
      - application/json
    put:
      operationId: updateCategory
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: Категория успешно обновлена
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Неверные данные запроса
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Категория не найдена
      summary: Обновить категорию
      x-content-type: application/json
      x-accepts:
      - application/json
  /transactions:
    get:
      operationId: getAllTransactions
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Transaction'
                type: array
          description: Успешный ответ
      summary: Получить все транзакции
      x-accepts:
      - application/json
    post:
      operationId: createTransaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Транзакция успешно создана
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Неверные данные запроса
      summary: Создать новую транзакцию
      x-content-type: application/json
      x-accepts:
      - application/json
  /transactions/{id}:
    delete:
      operationId: deleteTransaction
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Транзакция успешно удалена
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Транзакция не найдена
      summary: Удалить транзакцию
      x-accepts:
      - application/json
    get:
      operationId: getTransactionById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Успешный ответ
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Транзакция не найдена
      summary: Получить транзакцию по ID
      x-accepts:
      - application/json
    put:
      operationId: updateTransaction
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Транзакция успешно обновлена
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Неверные данные запроса
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Транзакция не найдена
      summary: Обновить транзакцию
      x-content-type: application/json
      x-accepts:
      - application/json
  /dashboard/summary:
    get:
      operationId: getDashboardSummary
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardSummary'
          description: Успешный ответ
      summary: Получить сводку бюджета
      x-accepts:
      - application/json
components:
  schemas:
    Category:
      example:
        color: color
        name: name
        id: 0
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        color:
          type: string
      required:
      - color
      - id
      - name
      type: object
    CategoryRequest:
      example:
        color: color
        name: name
      properties:
        name:
          type: string
        color:
          type: string
      required:
      - color
      - name
      type: object
    TransactionType:
      enum:
      - INCOME
      - EXPENSE
      type: string
    Transaction:
      example:
        date: 2000-01-23
        amount: 6.027456183070403
        description: description
        id: 0
        category:
          color: color
          name: name
          id: 0
        type: INCOME
      properties:
        id:
          format: int64
          type: integer
        description:
          type: string
        amount:
          format: double
          type: number
        date:
          format: date
          type: string
        category:
          $ref: '#/components/schemas/Category'
        type:
          $ref: '#/components/schemas/TransactionType'
      required:
      - amount
      - date
      - description
      - id
      - type
      type: object
    TransactionRequest:
      example:
        date: 2000-01-23
        amount: 0.8008281904610115
        description: description
        type: INCOME
        categoryId: 6
      properties:
        description:
          type: string
        amount:
          format: double
          type: number
        date:
          format: date
          type: string
        categoryId:
          format: int64
          type: integer
        type:
          $ref: '#/components/schemas/TransactionType'
      required:
      - amount
      - date
      - description
      - type
      type: object
    DashboardSummary:
      example:
        totalIncome: 0.8008281904610115
        balance: 1.4658129805029452
        recentTransactions:
        - date: 2000-01-23
          amount: 6.027456183070403
          description: description
          id: 0
          category:
            color: color
            name: name
            id: 0
          type: INCOME
        - date: 2000-01-23
          amount: 6.027456183070403
          description: description
          id: 0
          category:
            color: color
            name: name
            id: 0
          type: INCOME
        totalExpense: 6.027456183070403
      properties:
        totalIncome:
          format: double
          type: number
        totalExpense:
          format: double
          type: number
        balance:
          format: double
          type: number
        recentTransactions:
          items:
            $ref: '#/components/schemas/Transaction'
          type: array
      required:
      - balance
      - totalExpense
      - totalIncome
      type: object
    Error:
      example:
        code: 0
        message: message
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
      required:
      - code
      - message
      type: object
